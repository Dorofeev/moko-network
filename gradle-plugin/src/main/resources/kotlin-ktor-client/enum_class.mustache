import kotlinx.serialization.SerialName
import dev.icerock.moko.network.serializer.SerialEnum
import dev.icerock.moko.network.serializer.serial
import kotlinx.serialization.internal.CommonEnumSerializer

/**
* {{{description}}}
* Values: {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}},{{/-last}}{{/enumVars}}{{/allowableValues}}
*/
@Serializable(with = {{classname}}Serializer::class)
internal enum class {{classname}}(override val serialName: String? = null): SerialEnum {
{{#allowableValues}}{{#enumVars}}
    {{name}}(serialName = {{^isString}}"{{/isString}}{{{value}}}{{^isString}}"{{/isString}}){{^-last}},{{/-last}}{{#-last}};{{/-last}}
{{/enumVars}}{{/allowableValues}}
}

internal object {{classname}}Serializer: CommonEnumSerializer<{{classname}}>(
    serialName = "{{classname}}",
    choices = {{classname}}.values(),
    choicesNames = {{classname}}.values().serial()
)